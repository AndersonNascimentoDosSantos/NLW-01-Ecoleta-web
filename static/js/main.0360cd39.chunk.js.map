{"version":3,"sources":["assets/logo.svg","pages/home/index.tsx","services/api.tsx","pages/createPoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","CreatePoint","useState","items","setItems","useEffect","get","then","response","data","Uf","setUf","selectedUF","setselectedUF","cities","setCities","initialposition","setinitialposition","selectedCity","setselectedCity","latlng","setlatlng","name","email","whatsapp","formdata","setformdata","selectedItems","setselectedItems","handleInputchange","input","target","value","form","a","preventDefault","uf","city","latitude","longitude","post","alert","history","push","useHistory","ufInitials","map","sigla","cityNames","nome","navigator","geolocation","getCurrentPosition","position","coords","onSubmit","htmlFor","type","onChange","Map","center","zoom","onclick","lat","lng","TileLayer","attribution","url","Marker","event","key","cidade","item","onClick","findIndex","filtredItems","filter","handeleSelectedItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0360cd39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\nimport logo from '../../assets/logo.svg';\nimport {FiLogIn} from 'react-icons/fi';\nimport './styles.css'; \nimport {Link} from 'react-router-dom';\nconst Home = ( ) => {\n    return (\n<div id=\"page-home\">\n    <div className=\"content\">\n        <header>\n        <img src={logo} alt=\"Ecoleta\" />\n        </header>\n        <main>\n            <h1>Seu marketplace de coleta de residuos</h1>\n            <p> Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.</p>\n            <Link to=\"/Create-point\">\n                <span>\n                    <FiLogIn/>\n                </span>\n                <strong>Cadastre um ponto de coleta</strong>\n            </Link>\n        </main>\n           </div>\n</div>\n\n    );\n}\n\nexport default Home;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL:\"http://localhost:3333\"\n});\n\nexport default api;","import React,{useEffect, useState,ChangeEvent, FormEvent} from 'react';\nimport './styles.css';\nimport {Link,useHistory} from 'react-router-dom'\nimport logo from '../../assets/logo.svg';\nimport {FiArrowLeft} from 'react-icons/fi';\nimport { Map, TileLayer, Marker} from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport {LeafletMouseEvent} from 'leaflet';\n\ninterface  item {\n   id:number,\n   title:string,\n   image_url:string \n};\n\ninterface IBGEUFResponse{\n    sigla:string\n}\ninterface IBGECITYResponse{\n    nome:string\n}\nconst CreatePoint = () => {\n\n    const [items, setItems] = useState<item[]>([]);\n    useEffect(()=>{\n        api.get('itens').then(\n            response => {\n                setItems(response.data);\n            }\n        )\n\n    },[]);\n\n    const [Uf, setUf] = useState<string[]>([]);\n    const [selectedUF, setselectedUF] = useState('0');\n    const [cities, setCities] = useState<string[]>([]);\n    const [initialposition, setinitialposition] = useState<[number,number]>([0,0])\n    const [selectedCity, setselectedCity] = useState('0');\n    const [latlng, setlatlng] = useState<[number,number]>([0,0]);\n   const [formdata, setformdata] = useState({\n       name:'',\n       email:'',\n       whatsapp:''\n   });\n   const [selectedItems, setselectedItems] = useState<number[]>([])\n    function handleSelectedUf(event:ChangeEvent<HTMLSelectElement>){\n        setselectedUF(event.target.value);\n    }\n    function handleSelectedCity(cidade:ChangeEvent<HTMLSelectElement>){\n        setselectedCity(cidade.target.value);\n    }\n    function handleMapClick(map:LeafletMouseEvent){\n     setlatlng([map.latlng.lat,map.latlng.lng]);\n    }\n    function handleInputchange(input:ChangeEvent<HTMLInputElement>){\n        const {name,value} = input.target;\n        setformdata({...formdata,[name]:value})\n    }\n    function handeleSelectedItem(id:number){\n        const alreadySelected = selectedItems.findIndex(item => item === id );\n\n        if(alreadySelected>=0)\n        {\n            const filtredItems = selectedItems.filter( item => item !== id);\n            setselectedItems(filtredItems);\n        }else{\n            setselectedItems([...selectedItems,id]);\n        }\n       \n    }\n    async function handleSubmit(form:FormEvent){\n        form.preventDefault();\n        const {email,name,whatsapp} = formdata;\n        const uf = selectedUF;\n        const city = selectedCity;\n        const [latitude,longitude] = latlng;\n        const items = selectedItems;\n\n        const data = {\n            name,\n            whatsapp,\n            email,\n            uf,\n            city,\n            latitude,\n            longitude,\n            items\n        };\n       await api.post('points',data);\n       alert(\"ponto de coleta criado\");\n        history.push('/');\n    }\n\n    const history = useHistory();\n\n\n\n    useEffect(()=>{\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n        const ufInitials=response.data.map(uf=> uf.sigla)\n        \n        setUf(ufInitials);\n\n    });\n    },[]);\n\n    useEffect(() => {\n        axios\n        .get<IBGECITYResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`)\n        .then(response => {\n        if(selectedUF === '0'){\n            return;\n        }\n        const cityNames=response.data.map(city=> city.nome)\n        \n        setCities(cityNames);\n\n    });\n            }, [selectedUF]);\n    useEffect(()=>{\n                navigator.geolocation.getCurrentPosition(position=>{\n                   // const {latitude,longitude} = position.coords;\n                    \n                    setinitialposition([position.coords.latitude,position.coords.longitude]);\n                    \n                });\n            },[])\n\n    return (\n       <div id=\"page-create-point\">\n           <header>\n           <img src={logo} alt=\"Ecoleta\"/>\n               <Link to=\"/\">\n              <FiArrowLeft/>\n               voltar para home\n               </Link>\n              </header>\n              <form onSubmit={handleSubmit}>\n                 <h1>Cadastro do <br/> Ponto de Coleta</h1> \n              \n              <fieldset>\n                <legend><h2>Dados</h2></legend>\n                <div className=\"field\">\n                    <label htmlFor=\"name\">nome da entidade</label>\n                    <input type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                \n                    onChange={handleInputchange}\n\n                    />\n                </div>\n                <div className=\"field-group\">\n                <div className=\"field\">\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    onChange={handleInputchange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label htmlFor=\"whatsapp\">whatsapp</label>\n                    <input type=\"text\"\n                    name=\"whatsapp\"\n                    id=\"whatsapp\"\n                    onChange={handleInputchange}\n                    />\n                </div>\n                </div>\n              </fieldset>\n              <fieldset>\n                  <legend>\n                    <h2>Endereços</h2>\n                  <span>selecione o endereço no mapa</span>\n                  \n                  </legend>\n                  <Map center={initialposition} \n                  zoom={15}\n                  onclick={handleMapClick}\n                  >\n                  <TileLayer\n                 attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n                    <Marker position={latlng}/>\n                  </Map>\n\n                  <div className=\"field-group\">\n                      <div className=\"field\">\n                          <label htmlFor=\"uf\">Estado(UF)</label>\n                          <select onChange={handleSelectedUf} \n                          name=\"uf\" \n                          id=\"uf\" \n                          value={selectedUF}>\n                              <option value=\"0\">selecione uma UF</option>\n                              {Uf.map(uf =>(\n                                <option key={uf}\n                                 value={uf}>\n                                     {uf}\n                                </option>  \n                              ))}\n                          </select>\n\n                      </div>\n                      <div className=\"field\">\n                          <label htmlFor=\"city\">cidade</label>\n                          <select name=\"city\" \n                          id=\"city\"\n                          onChange={handleSelectedCity}\n                          value={selectedCity}\n                          >\n                              <option value=\"0\">selecione uma cidade</option>\n                              {cities.map(city =>(\n                                <option key={city}\n                                 value={city}>\n                                     {city}\n                                </option>  \n                              ))}\n                          </select>\n\n                      </div>\n                  </div>\n              </fieldset>\n              <fieldset>\n                  <legend><h2>Itens de Coleta</h2>\n                  <span>Selecione um item ou mais itens abaixo</span>\n\n                  </legend>\n                   \n                    \n                  <ul className=\"items-grid\">\n                            {items.map(item => (\n                           <li key={item.id} \n                           onClick={()=>handeleSelectedItem(item.id)}\n                           className={selectedItems.includes(item.id)? 'selected':''}\n                           > <img src={item.image_url} alt={item.title } />\n                           <span>{item.title}</span>\n                           </li>\n                            \n\n                     ))}\n                     </ul>\n\n              </fieldset>\n\n              <button type=\"submit\">\n                  cadastrar ponto de coleta\n              </button>\n              </form>\n       </div>\n    );\n}\n\nexport default CreatePoint;","import React from 'react';\nimport {Route,BrowserRouter} from 'react-router-dom';\n\nimport Home from './pages/home';\nimport CreatePoint from './pages/createPoint';\nconst Routes = () =>{\n\n    return (\n        <BrowserRouter>\n        <Route component={Home} path=\"/\" exact />\n        <Route component={CreatePoint} path=\"/create-point\" />\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React from 'react';\n\nimport './App.css';\nimport Routes from './routes';\n\n\n\nfunction App() {\n  return (\n         \n      <Routes/>\n        \n     \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}